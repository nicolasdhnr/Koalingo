{"ast":null,"code":"var _jsxFileName = \"/Users/nico/Code/Koalingo/frontend/koalingo/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\n// Router relate stuff\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\n// Import components\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Memorizing from './pages/player/Memorizing';\nimport HostQuizz from './pages/host/HostQuizz';\nimport PlayerLobby from './pages/player/PlayerLobby';\nimport HostLobby from './pages/host/HostLobby';\nimport { useEffect } from \"react\";\nimport { useLocation, useNavigationType } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const action = useNavigationType();\n  const location = useLocation();\n  const pathname = location.pathname;\n  useEffect(() => {\n    if (action !== \"POP\") {\n      window.scrollTo(0, 0);\n    }\n  }, [action]);\n  useEffect(() => {\n    let title = \"\";\n    let metaDescription = \"\";\n\n    //TODO: Update meta titles and descriptions below\n    switch (pathname) {\n      case \"/\":\n        title = \"\";\n        metaDescription = \"\";\n        break;\n    }\n    if (title) {\n      document.title = title;\n    }\n    if (metaDescription) {\n      const metaDescriptionTag = document.querySelector('head > meta[name=\"description\"]');\n      if (metaDescriptionTag) {\n        metaDescriptionTag.content = metaDescription;\n      }\n    }\n  }, [pathname]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/home\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/player/memorizing\",\n        element: /*#__PURE__*/_jsxDEV(Memorizing, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/player/lobby\",\n        element: /*#__PURE__*/_jsxDEV(PlayerLobby, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/host/quizz\",\n        element: /*#__PURE__*/_jsxDEV(HostQuizz, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/host/lobby\",\n        element: /*#__PURE__*/_jsxDEV(HostLobby, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n//TODO: Make it so that the user can only access the home page if they are logged in\n_s(App, \"tIxn6LeLpV6gTw4imGOVhWpUIdU=\", false, function () {\n  return [useNavigationType, useLocation];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","BrowserRouter","Router","Routes","Route","Home","Login","Memorizing","HostQuizz","PlayerLobby","HostLobby","useEffect","useLocation","useNavigationType","App","action","location","pathname","window","scrollTo","title","metaDescription","document","metaDescriptionTag","querySelector","content"],"sources":["/Users/nico/Code/Koalingo/frontend/koalingo/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\n// Router relate stuff\nimport { BrowserRouter as Router, Routes, Route} from \"react-router-dom\";\n\n// Import components\nimport Home from './pages/Home';\nimport Login  from './pages/Login';\nimport Memorizing from './pages/player/Memorizing';\nimport HostQuizz from './pages/host/HostQuizz';\nimport PlayerLobby from './pages/player/PlayerLobby';\nimport HostLobby from './pages/host/HostLobby';\nimport { useEffect } from \"react\";\nimport { useLocation, useNavigationType } from \"react-router-dom\";\n\nfunction App() {\n  const action = useNavigationType();\n  const location = useLocation();\n  const pathname = location.pathname;\n\n  useEffect(() => {\n    if (action !== \"POP\") {\n      window.scrollTo(0, 0);\n    }\n  }, [action]);\n\n  useEffect(() => {\n    let title = \"\";\n    let metaDescription = \"\";\n\n    //TODO: Update meta titles and descriptions below\n    switch (pathname) {\n      case \"/\":\n        title = \"\";\n        metaDescription = \"\";\n        break;\n    }\n\n    if (title) {\n      document.title = title;\n    }\n\n    if (metaDescription) {\n      const metaDescriptionTag = document.querySelector(\n        'head > meta[name=\"description\"]'\n      );\n      if (metaDescriptionTag) {\n        metaDescriptionTag.content = metaDescription;\n      }\n    }\n  }, [pathname]);\n\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Login />} />\n        <Route path=\"/home\" element={<Home />} /> \n        <Route path=\"/player/memorizing\" element={<Memorizing />} />\n        <Route path=\"/player/lobby\" element={<PlayerLobby />} />\n        <Route path=\"/host/quizz\" element={<HostQuizz />} />\n        <Route path=\"/host/lobby\" element={<HostLobby />} />\n      </Routes>\n    </Router>\n\n  );\n}\n\n//TODO: Make it so that the user can only access the home page if they are logged in\n\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB;AACA,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAO,kBAAkB;;AAExE;AACA,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,KAAK,MAAO,eAAe;AAClC,OAAOC,UAAU,MAAM,2BAA2B;AAClD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,iBAAiB,QAAQ,kBAAkB;AAAC;AAElE,SAASC,GAAG,GAAG;EAAA;EACb,MAAMC,MAAM,GAAGF,iBAAiB,EAAE;EAClC,MAAMG,QAAQ,GAAGJ,WAAW,EAAE;EAC9B,MAAMK,QAAQ,GAAGD,QAAQ,CAACC,QAAQ;EAElCN,SAAS,CAAC,MAAM;IACd,IAAII,MAAM,KAAK,KAAK,EAAE;MACpBG,MAAM,CAACC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IACvB;EACF,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZJ,SAAS,CAAC,MAAM;IACd,IAAIS,KAAK,GAAG,EAAE;IACd,IAAIC,eAAe,GAAG,EAAE;;IAExB;IACA,QAAQJ,QAAQ;MACd,KAAK,GAAG;QACNG,KAAK,GAAG,EAAE;QACVC,eAAe,GAAG,EAAE;QACpB;IAAM;IAGV,IAAID,KAAK,EAAE;MACTE,QAAQ,CAACF,KAAK,GAAGA,KAAK;IACxB;IAEA,IAAIC,eAAe,EAAE;MACnB,MAAME,kBAAkB,GAAGD,QAAQ,CAACE,aAAa,CAC/C,iCAAiC,CAClC;MACD,IAAID,kBAAkB,EAAE;QACtBA,kBAAkB,CAACE,OAAO,GAAGJ,eAAe;MAC9C;IACF;EACF,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,oBACE,QAAC,MAAM;IAAA,uBACL,QAAC,MAAM;MAAA,wBACL,QAAC,KAAK;QAAC,IAAI,EAAC,GAAG;QAAC,OAAO,eAAE,QAAC,KAAK;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eACtC,QAAC,KAAK;QAAC,IAAI,EAAC,OAAO;QAAC,OAAO,eAAE,QAAC,IAAI;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eACzC,QAAC,KAAK;QAAC,IAAI,EAAC,oBAAoB;QAAC,OAAO,eAAE,QAAC,UAAU;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eAC5D,QAAC,KAAK;QAAC,IAAI,EAAC,eAAe;QAAC,OAAO,eAAE,QAAC,WAAW;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eACxD,QAAC,KAAK;QAAC,IAAI,EAAC,aAAa;QAAC,OAAO,eAAE,QAAC,SAAS;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eACpD,QAAC,KAAK;QAAC,IAAI,EAAC,aAAa;QAAC,OAAO,eAAE,QAAC,SAAS;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EAC7C;IAAA;IAAA;IAAA;EAAA,QACF;AAGb;;AAEA;AAAA,GApDSH,GAAG;EAAA,QACKD,iBAAiB,EACfD,WAAW;AAAA;AAAA,KAFrBE,GAAG;AAuDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}